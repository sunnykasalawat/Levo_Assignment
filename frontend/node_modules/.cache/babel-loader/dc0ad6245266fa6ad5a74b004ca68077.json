{"ast":null,"code":"import { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\n\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\nexport function isSameISOWeekYear(dateLeft, dateRight) {\n  const dateLeftStartOfYear = startOfISOWeekYear(dateLeft);\n  const dateRightStartOfYear = startOfISOWeekYear(dateRight);\n  return +dateLeftStartOfYear === +dateRightStartOfYear;\n}\n\n// Fallback for modularized imports:\nexport default isSameISOWeekYear;","map":null,"metadata":{},"sourceType":"module"}